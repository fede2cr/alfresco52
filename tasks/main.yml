---
# tasks file for alfresco52
# TODO: Validar resto de puertos de Alfresco, antes y después
# TODO: Validar logeando usuario, subiendo contenido, bajando contenido, y borrando contenido
# TODO: mover "hasta que palme tomcat", y comprobación de Alfresco, a handlers
# TODO: Comprobar servicios con handler
# TODO: Transformar archivo de opciones en template de jinja con info en inventario. Opcional automatizar mysql/pgsql
- name: Revisa que no se ejecuten tags que nadie llamo
  fail:
    msg: Nadie llamo a este tag...
  tags:
  - nadiemellamo
- name: Instala aptitude (requerido por ansible)
  apt:
    name: aptitude
    state: latest
    update_cache: yes
  become: yes
  tags: install
- name: Actualiza cache
  apt:
    update_cache: yes
  become: yes
  tags: install
- name: Actualiza paquetes
  apt:
    upgrade: dist
  become: yes
  tags: install
- name: autoremueve
  apt:
    autoremove: yes
  become: yes
  tags: install
- name: Instala dependencias para Alfresco
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - libfontconfig1-dev
    - libice-dev
    - libsm-dev
    - libxrender-dev
    - libxext-dev
    - libxinerama-dev
    - libcups2-dev
    - libglu-dev
    - libcairo2
    - libgl1-mesa-glx
    - rsync
    - python-psutil
  become: yes
  tags: install
- name: Revisa que exista alfresco-global.properties según inventario
  stat:
    path: "{{ alf_glob_prop_path }}"
  tags: mysql_preupgrade
- name: Comprueba dir.root
  lineinfile:
    path: "{{ alf_glob_prop_path }}"
    line: "dir.root={{ dir_root }}"
  tags: mysql_preupgrade
  check_mode: yes
  become: yes
  register: dir_root_ok
  failed_when: dir_root_ok.changed
- name: Detiene Alfresco antes de actualización
  service:
    name: alfresco.service
    state: stopped
  become: yes
  tags: mysql_preupgrade
  ignore_errors: "{{ ansible_check_mode }}"
- name: Encuentra PID de tomcat
  pids:
    name: java
  register: tomcat_pid
  tags: mysql_preupgrade
- name: Espera hasta que se detenga Alfresco
  wait_for:
    path: "/proc/{{ tomcat_pid.pids|join(',')}} }}/status"
    state: absent
  tags: mysql_preupgrade
  become: yes
- name: Respalda base de datos Alfresco, y almancena en HOME
  mysql_db:
    login_user: root
    login_password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: dump
    name: alfresco
    target: "/{{ ansible_env.HOME }}/alfresco-{{ inventory_hostname }}.sql"
  tags: mysql_preupgrade
  become: yes
- name: Respalda {{ dir_root }} y almancena en HOME
  archive:
    path: "{{ dir_root }}"
    dest: "/{{ ansible_env.HOME }}/alfresco-{{ inventory_hostname }}.tar.bz2"
    format: bz2
  tags: mysql_preupgrade
  become: yes
- name: Respalda {{ alf_root }} y almancena en HOME
  archive:
    path: "{{ alf_root }}"
    dest: "/{{ ansible_env.HOME }}/alfresco-{{ inventory_hostname }}-full.tar.bz2"
    format: bz2
  tags: mysql_preupgrade
  become: yes
- name: Respalda {{ solr4_root }} y almancena en HOME
  archive:
    path: "{{ alf_root }}"
    dest: "/{{ ansible_env.HOME }}/alfresco-{{ inventory_hostname }}-solr4.tar.bz2"
    format: bz2
  tags: mysql_preupgrade
  become: yes
- name: Mueve el Alfresco original a otro directorio antes de actualizar
  command: mv {{ alf_root }} /opt/alfresco.old
  tags: mysql_preupgrade
  become: yes
- name: Crea base de datos en MariaDB
  mysql_db:
    name: alfresco
    state: absent
    login_user: root
    login_password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    encoding: utf8
  become: yes
  tags: mysql_preupgrade
- name: Crea usuario en base de datos MariaDB
  mysql_user:
    name: alfresco
    host: "{{ item }}"
    password: alfresco
    state: absent
    priv: 'alfresco.*:ALL'
    login_user: root
    login_password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  become: yes
  tags: mysql_preupgrade
- name: Reinicia base de datos para aplicar usuario
  service: 
    name: mysql
    state: restarted
    enabled: true
  become: yes
  tags: mysql_preupgrade
- name: Preconfigura contraseñas, en paquete de MariaDB
  debconf:
    name: mariadb-server
    question: "{{ item }}"
    value: "root"
    vtype: password
  loop:
    - mysql-server/root_password
    - mysql-server/root_password_again
  become: yes
  tags: mysql_install
- name: Instala paquetes de MariaDB
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - mariadb-server
    - python-pymysql
  become: yes
  tags:
    - mysql_install
    - mysql_preupgrade
- name: Inicia base de datos
  service: 
    name: mysql 
    state: started
    enabled: true
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: mysql_install
- name: Configura usuario root de MySQL
  mysql_user:
    name: root
    host: "{{ item }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    password: "root"
    priv: '*.*:ALL,GRANT'
    check_implicit_admin: true
  loop:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  become: yes
  tags: mysql_install
- name: Crea base de datos en MariaDB
  mysql_db:
    name: alfresco
    state: present
    login_user: root
    login_password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    encoding: utf8
  become: yes
  tags:
    - mysql_install
    - mysql_preupgrade
- name: Crea usuario en base de datos MariaDB
  mysql_user:
    name: alfresco
    host: "{{ item }}"
    password: alfresco
    state: present
    priv: 'alfresco.*:ALL'
    login_user: root
    login_password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  become: yes
  tags:
    - mysql_install
    - mysql_preupgrade
- name: Reinicia base de datos para aplicar usuario
  service: 
    name: mysql
    state: restarted
    enabled: true
  become: yes
  tags: mysql_install
- name: Copia configuracion para alfresco, usando PostgreSQL
  copy:
    src: "{{ role_path }}/files/option-file-pgsql.txt"
    dest: "{{ ansible_env.HOME }}/option-file.txt"
    mode: 0644
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: pgsql
- name: Copia configuracion para alfresco, usando MySQL
  copy:
    src: "{{ role_path }}/files/option-file-mysql.txt"
    dest: "{{ ansible_env.HOME }}/option-file.txt"
    mode: 0644
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: mysql
- name: Copia alfresco
  copy:
    src: "{{ role_path }}/files/{{ alfresco_installer }}"
    dest: "{{ ansible_env.HOME }}"
    mode: 0755
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  tags: install
- name: Revisa que Alfresco no esté instalado
  stat:
    path: /opt/alfresco_community
  register: alfresco_dir
  tags: install
- name: Presenta error si Alfresco ha sido instalado
  fail:
    msg: Alfresco ha sido instalado, omitiendo completar instalación
  when: alfresco_dir.stat.isdir is defined and alfresco_dir.stat.isdir
  tags: install
- name: Instala Alfresco
  command:  "{{ ansible_env.HOME }}/{{ alfresco_installer }} --optionfile {{ ansible_env.HOME }}/option-file.txt"
  become: yes
  register: alf_install
  tags: install
- name: Cambia archivo de wqsapi #TODO: ¿Se ocupa?
  replace:
    regexp: "#wcmqs.api.user=admin"
    replace: "wcmqs.api.user=admin"
    dest: /opt/alfresco_community/tomcat/shared/classes/alfresco/extension/wqsapi-custom.properties
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: mysql
- name: Copia modulo para Java y MySQL
  unarchive:
    src: https://downloads.mysql.com/archives/get/file/mysql-connector-java-5.1.46.tar.gz
    dest: /opt/alfresco_community/tomcat/lib/
    remote_src: yes
    extra_opts:
      - 'mysql-connector-java-5.1.46/mysql-connector-java-5.1.46.jar'
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: mysql
- name: Copia módulo para Java y MySQL a directorio apropiado
  copy: 
    remote_src: True
    src: /opt/alfresco_community/tomcat/lib/mysql-connector-java-5.1.46/mysql-connector-java-5.1.46.jar
    dest: /opt/alfresco_community/tomcat/lib/
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: 
    - mysql
    - mysql_postinstall
- name: Levanta Alfresco
  service:
    name: alfresco.service
    state: restarted
  become: yes
  tags: install
  ignore_errors: "{{ ansible_check_mode }}"
- name: Revisa cada 10s, si ya esta abierto puerto 8080
  wait_for:
    port: 8080
    delay: 10
  tags: install
- name: Espera a que se complete instalador
  pause:
    seconds: "{{ installer_delay }}"
  tags: install
- name: Comprobamos servicio de Alfresco por puerto TCP/8080
  uri:
    url: http://localhost:8080/share/
    status_code: 200
  tags: install
- name: Detiene Alfresco antes de postinstalación
  service:
    name: alfresco.service
    state: stopped
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: mysql_postupgrade
- name: Encuentra PID de tomcat
  pids:
    name: java
  register: tomcat_pid
  tags: mysql_postupgrade
- name: Espera hasta que se detenga Alfresco
  wait_for:
    path: "/proc/{{ tomcat_pid.pids|join(',')}} }}/status"
    state: absent
  tags: mysql_postupgrade
  become: yes
- name: Mueve el dir_root en blanco de la instalación de Alfresco, antes de importar
  command: mv {{ dir_root }} /opt/dir_root.old
  tags: mysql_postupgrade
  become: yes
- name: Importa dir_root en postinstalación
  command: "mv /opt/alfresco.old/alf_data/ {{ alf_root }}/"
  tags: mysql_postupgrade
  become: yes
- name: Importa base de datos en postinstalación
  mysql_db:
    state: import
    name: alfresco
    target: "/{{ ansible_env.HOME }}/alfresco-{{ inventory_hostname }}.sql"
    login_user: root
    login_password: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags: mysql_postupgrade
  become: yes
- name: Levanta Alfresco luego de actualizar
  service:
    name: alfresco.service
    state: restarted
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: mysql_postupgrade
- name: Revisa cada 10s, si ya esta abierto puerto 8080 luego de actualizar
  wait_for:
    port: 8080
    delay: 10
  tags: mysql_postupgrade
- name: Espera a que se complete instalador
  pause:
    seconds: "{{ installer_delay }}"
  tags: mysql_postupgrade
- name: Comprobamos servicio de Alfresco por puerto TCP/8080 luego de actualizar
  uri:
    url: http://localhost:8080/share/
    status_code: 200
  tags: mysql_postupgrade